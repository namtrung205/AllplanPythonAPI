### To use these settings, copy the file to user folder

[MASTER]

[Master]
output-format=msvs

init-hook='import sys; sys.path.append("N:/BuildOutput/_VS2017_x64/UnicodeDebug/Dll");
                       sys.path.append("N:/DeliveryData/etc/PythonpartsScripts/GeneralScripts");
                       sys.path.append("N:/DeliveryData/etc/PythonpartsScripts")'

extension-pkg-whitelist=NemAll_Python_AllplanSettings,
                        NemAll_Python_BaseElements,
                        NemAll_Python_BasisElements,
                        NemAll_Python_Geometry,                        
                        NemAll_Python_IFW_Input,
                        NemAll_Python_Palette,
                        NemAll_Python_Reinforcement,
                        NemAll_Python_Utility


### To use these settings, copy the file to user folder

[MESSAGES CONTROL]
# R0201: Method could be a function [R:no-self-use]
# R0801: Similar lines in 2 files
# R0902: Too many instance attributes [R:too-many-instance-attributes]
# R0903: Too few public methods [R:too-few-public-methods]
# R0904: Too many public methods [R:too-many-public-methods]
# R0911: Too many return statements [R:too-many-return-statements]3
# R0912: Too many branches [R:too-many-branches]
# R0913: Too many arguments [R:too-many-arguments]
# R0914: Too many local variables [R:too-many-locals]
# R0915: Too many statements [R:too-many-statements]
# C0301: Line too long [C:line-too-long]
# C0302: Too many lines in module [C:too-many-lines]
# C0326: Exactly one space required before assignment
# W0123: Use of eval [W:eval-used]
# W0511: TODO [W:fixme]
# W0612: Unused variable [W:unused-variable]
# W0613: Unused argument [W:unused-argument]
# E1101: [E:no-member]
# I0011: Locally disabling [I:locally-disabled]
# I0012: Locally enabling [I:locally-enabled]
#disable=R0201,R0801,C0326,W0123,W0511,I0011,I0012
disable=C0326,W0123


[BASIC]

# Regular expression matching correct attribute names
#attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for attribute names
#attr-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct class attribute names
#class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Naming hint for class attribute names
#class-attribute-name-hint=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Regular expression matching correct function names
#default [a-z_][a-z0-9_]{2,30}$
function-rgx=[a-z_][a-z0-9_]{2,45}$

# Naming hint for function names
# default [a-z_][a-z0-9_]{2,30}$
function-name-hint=[a-z_][a-z0-9_]{2,45}$

# Regular expression matching correct constant names
#const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Naming hint for constant names
#const-name-hint=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression matching correct argument names
#argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for argument names
#argument-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct variable names
#variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for variable names
#variable-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct module names
#module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Naming hint for module names
#module-name-hint=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct inline iteration names
#inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Naming hint for inline iteration names
#inlinevar-name-hint=[A-Za-z_][A-Za-z0-9_]*$

# Regular expression matching correct method names
# default [a-z_][a-z0-9_]{2,30}$
method-rgx=[a-z_][a-z0-9_]{2,45}$

# Naming hint for method names
# default [a-z_][a-z0-9_]{2,30}$
method-name-hint=[a-z_][a-z0-9_]{2,45}$

# Regular expression matching correct class names
#class-rgx=[A-Z_][a-zA-Z0-9]+$

# Naming hint for class names
#class-name-hint=[A-Z_][a-zA-Z0-9]+$

# Regular expression which should only match function or class names that do

# not require a docstring.
#no-docstring-rgx=__.*__

# Minimum line length for functions/classes that require docstrings, shorter

# ones are exempt.
#docstring-min-length=-1


[FORMAT]

# Maximum number of characters on a single line.
# default 100
max-line-length=250

# Regexp for a line that is allowed to be longer than the limit.
#ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Allow the body of an if to be on the same line as the test if there is no
# else.
#single-line-if-stmt=no

# Maximum number of lines in a module
# default 1000
max-module-lines=1200


[DESIGN]

# Maximum number of arguments for function / method
# default 5
max-args=12

# Argument names that match this expression will be ignored. Default to name
# with leading underscore
#ignored-argument-names=_.*

# Maximum number of locals for function / method body
# default 15
max-locals=45

# Maximum number of return / yield for function / method body
# default 6
max-returns=15

# Maximum number of branch for function / method body
# default 12
max-branches=29

# Maximum number of statements in function / method body
# default 50
max-statements=78

# Maximum number of parents for a class (see R0901).
#max-parents=7

# Maximum number of attributes for a class (see R0902).
# default 7
max-attributes=22

# Minimum number of public methods for a class (see R0903).
# default 2
min-public-methods=1

# Maximum number of public methods for a class (see R0904).
max-public-methods=30
